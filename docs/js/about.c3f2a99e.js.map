{"version":3,"sources":["webpack:///./src/views/Carts.vue","webpack:///./src/views/Carts.vue?bb48"],"names":["loading","StoreCarts","length","goods","key","id","span","class","showChecked","removeGoods","changeNum","changeChecked","image","description","name","data","carts","setup","store","StoreGetters","getters","localStorage","getItem","setLoading","status","value","updateCarts","dispatch","computedCartsSelectedGoods","arr","useRemoveGoods","oldCheckedMap","useChangeNumber","otherGoods","newGoods","sort","setItem","JSON","stringify","useChangeCheckedType","parse","state","components","GoodsCarts","Col","Row","Loading","EmptyGoods","render"],"mappings":"+SACkB,EAAAA,QACA,EAAAA,SAAW,EAAAC,WAAWC,OAAM,G,iBAA5C,eAeM,W,wBAbF,iBAA2B,E,mBAD7B,eAaM,2BAZY,EAAAD,YAAU,SAAnBE,G,wBADT,eAaM,GAXHC,IAAKD,EAAME,GACZC,KAAK,IACJC,MAAO,gB,yBAER,iBAMe,CANf,eAMe,GALZC,aAAa,EACbL,MAAOA,EACP,cAAa,EAAAM,YACb,YAAW,EAAAC,UACX,gBAAe,EAAAC,e,uHAItB,eAIM,W,wBAHJ,iBAEM,CAFN,eAEM,GAFDL,KAAK,MAAI,C,wBACZ,iBAA8D,CAA9D,eAA8D,GAAjDM,MAAM,QAAQC,YAAY,e,mCAnB3C,eAAmC,Y,4MAyCtB,GACbC,KAAM,OACNC,KAFa,WAGX,MAAO,CACLC,MAAO,KAGXC,MAPa,WAQX,IAAMC,EAAQ,iBACRC,EAAeD,EAAME,QAErBJ,EAAQK,aAAaC,QAAQ,SAE7BtB,EAAU,gBAAI,GAGpB,SAASuB,EAAYC,GACnBxB,EAAQyB,MAAQD,EAQlB,SAASE,EAAaX,GACpBG,EAAMS,SAAS,cAAe,CAAEX,MAAOD,IAnBlC,SAuBQa,IAvBR,6FAuBP,8FACE,eAAmB,MAAO,aAD5B,2CAvBO,wBAgCP,SAASnB,EAAaN,GACpB,IAAM0B,EAAM,OAAAC,EAAA,MAAe3B,EAAOgB,EAAalB,YAC/CyB,EAAYG,GACZ,eAAmB,MAAO,QAASA,GAEnC,IAAME,EAAgB,eAAmB,MAAO,qBACzCA,EAAc5B,EAAME,IAC3B,eAAmB,MAAO,aAAc0B,GAI1C,SAASrB,EAAWe,EAAOtB,GACzB,MAAiC,OAAA6B,EAAA,MAAgBP,EAAOtB,EAAOgB,EAAalB,YAApEgC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACpBR,EAAY,yBAAIO,GAAJ,CAAgBC,IAAUC,KAAK,eAAQ,UACnDd,aAAae,QAAQ,QAASC,KAAKC,UAAUnB,EAAalB,aAG5D,SAASU,EAAec,EAAOtB,GAC7B,MAAiC,OAAAoC,EAAA,MAAqBd,EAAOtB,EAAOgB,EAAalB,YAAzEgC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACpBR,EAAY,yBAAIO,GAAJ,CAAgBC,IAAUC,KAAK,eAAQ,UACnD,eAAmB,MAAO,QAAShB,EAAalB,YASlD,OANIe,GACFU,EAAYW,KAAKG,MAAMxB,IAGzBO,GAAW,GAEJ,CACLvB,UACAuB,aACAK,6BACAlB,YACAD,cACAE,gBACAV,WAAY,gBAAS,kBAAMiB,EAAMuB,MAAMxC,gBAG3CyC,WAAY,CACVC,aAAA,KACAC,IAAG,OACHC,IAAG,OACHC,QAAO,OACPC,aAAA,OC1HJ,EAAOC,OAASA,EAED","file":"js/about.c3f2a99e.js","sourcesContent":["<template>\r\n  <Loading v-if=\"!loading\"></Loading>\r\n  <Row v-else-if=\"loading && StoreCarts.length > 0\">\r\n    <Col\r\n      v-for=\"goods in StoreCarts\"\r\n      :key=\"goods.id\"\r\n      span=\"6\"\r\n      :class=\"'card-wrapper'\"\r\n    >\r\n      <Goods-Carts\r\n        :showChecked=\"true\"\r\n        :goods=\"goods\"\r\n        @removeGoods=\"removeGoods\"\r\n        @changeNum=\"changeNum\"\r\n        @changeChecked=\"changeChecked\"\r\n      ></Goods-Carts>\r\n    </Col>\r\n  </Row>\r\n  <Row v-else>\r\n    <Col span=\"24\">\r\n      <empty-goods image=\"error\" description=\"赶紧去剁手吧\"></empty-goods>\r\n    </Col>\r\n  </Row>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from 'vue'\r\n\r\nimport GoodsCarts from 'components/GoodsCarts'\r\n\r\nimport EmptyGoods from 'components/EmptyGoods'\r\n\r\nimport { compare, localStorageAction } from 'utils/libs'\r\n\r\nimport { useStore } from 'vuex'\r\n\r\nimport { Col, Row, Loading } from 'vant'\r\n\r\nimport useChangeNumber from '../hooks/useChangeNumber'\r\nimport useChangeCheckedType from '../hooks/useChangeCheckedType'\r\nimport useRemoveGoods from '../hooks/useRemoveGoods'\r\n\r\nexport default {\r\n  name: 'cart',\r\n  data () {\r\n    return {\r\n      carts: []\r\n    }\r\n  },\r\n  setup () {\r\n    const store = useStore()\r\n    const StoreGetters = store.getters\r\n\r\n    const carts = localStorage.getItem('carts')\r\n\r\n    const loading = ref(false)\r\n\r\n    // 设置加载状态\r\n    function setLoading (status) {\r\n      loading.value = status\r\n    }\r\n\r\n    /**\r\n     * 方法说明\r\n     * @method 更新状态\r\n     * @param {Array} data 更新的产品数据\r\n     */\r\n    function updateCarts (data) {\r\n      store.dispatch('updateCarts', { carts: data })\r\n    }\r\n\r\n    // 计算购物车已选\r\n    async function computedCartsSelectedGoods () {\r\n      localStorageAction('get', 'saveCarts')\r\n    }\r\n\r\n    /**\r\n     * 方法说明\r\n     * @method 删除商品\r\n     * @param {Object} goods 需要删除的产品数据\r\n     */\r\n    function removeGoods (goods) {\r\n      const arr = useRemoveGoods(goods, StoreGetters.StoreCarts)\r\n      updateCarts(arr)\r\n      localStorageAction('set', 'carts', arr)\r\n      // 更新选择状态\r\n      const oldCheckedMap = localStorageAction('get', 'checkedMap')\r\n      delete oldCheckedMap[goods.id]\r\n      localStorageAction('set', 'checkedMap', oldCheckedMap)\r\n    }\r\n\r\n    // 修改商品数量\r\n    function changeNum (value, goods) {\r\n      const { otherGoods, newGoods } = useChangeNumber(value, goods, StoreGetters.StoreCarts)\r\n      updateCarts([...otherGoods, newGoods].sort(compare('sort')))\r\n      localStorage.setItem('carts', JSON.stringify(StoreGetters.StoreCarts))\r\n    }\r\n\r\n    function changeChecked (value, goods) {\r\n      const { otherGoods, newGoods } = useChangeCheckedType(value, goods, StoreGetters.StoreCarts)\r\n      updateCarts([...otherGoods, newGoods].sort(compare('sort')))\r\n      localStorageAction('set', 'carts', StoreGetters.StoreCarts)\r\n    }\r\n\r\n    if (carts) {\r\n      updateCarts(JSON.parse(carts))\r\n    }\r\n\r\n    setLoading(true)\r\n\r\n    return {\r\n      loading,\r\n      setLoading,\r\n      computedCartsSelectedGoods,\r\n      changeNum,\r\n      removeGoods,\r\n      changeChecked,\r\n      StoreCarts: computed(() => store.state.StoreCarts)\r\n    }\r\n  },\r\n  components: {\r\n    GoodsCarts,\r\n    Col,\r\n    Row,\r\n    Loading,\r\n    EmptyGoods\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import { render } from \"./Carts.vue?vue&type=template&id=d96ce214\"\nimport script from \"./Carts.vue?vue&type=script&lang=js\"\nexport * from \"./Carts.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}